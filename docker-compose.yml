services:
  fastapi:
    build:
      context: .
    env_file:
      - configs/.env.dev
#    entrypoint: sh -c "gunicorn -w 4 main:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    entrypoint: fastapi run src/main.py
    volumes:
      - .:/app
    expose:
      - "8000"
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  db:
    image: postgres:16
    env_file:
      - configs/.env.dev
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/db_data
    healthcheck:
      test: "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  elasticsearch:
    image: elasticsearch:8.6.2
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    expose:
      - "9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    restart: always
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro

    depends_on:
      - fastapi
    ports:
      - "80:80"

  db_migrations:
    build:
      context: .
    env_file:
      - configs/.env.dev
    command: sh migrate.sh
    depends_on:
      db:
        condition: service_healthy


volumes:
  db_data:
  es_data:
